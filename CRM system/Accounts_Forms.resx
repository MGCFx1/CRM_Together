<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAYgAAAApCAYAAAAvdL7ZAAAABGdBTUEAALGPC/xhBQAAAHtJREFUeF7t
        1LENACAMA8Fsyf6TQJMydQjoTvrelQMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA+N5ea0uS7pV3
        PE81VpLUV97xPNVYSVJfecfzVGMlSX3lHQMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPCgiAPodsgz
        +68iCAAAAABJRU5ErkJggg==
</value>
  </data>
</root>